\set HIVE_SERVER         `echo \'"$HIVE_SERVER"\'`
\set HIVE_CLIENT_TYPE    `echo \'"$CLIENT_TYPE"\'`
\set HIVE_PORT           `echo \'"$HIVE_PORT"\'`
\set HIVE_USER           `echo \'"$HIVE_USER"\'`
\set HIVE_PASSWORD       `echo \'"$HIVE_PASSWORD"\'`
\set AUTH_TYPE           `echo \'"$AUTH_TYPE"\'`
\c contrib_regression
CREATE EXTENSION IF NOT EXISTS hdfs_fdw;
CREATE SERVER hdfs_server FOREIGN DATA WRAPPER hdfs_fdw
 OPTIONS(host :HIVE_SERVER, port :HIVE_PORT, client_type :HIVE_CLIENT_TYPE, auth_type :AUTH_TYPE);
CREATE USER MAPPING FOR public SERVER hdfs_server
 OPTIONS (username :HIVE_USER, password :HIVE_PASSWORD);
CREATE FOREIGN TABLE dept (
    deptno          INTEGER,
    dname           VARCHAR(14),
    loc             VARCHAR(13)
)
SERVER hdfs_server OPTIONS (dbname 'fdw_db', table_name 'dept');
-- server without log_remote_sql option
EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM dept;
               QUERY PLAN                
-----------------------------------------
 Foreign Scan on public.dept
   Output: deptno, dname, loc
   Remote SQL: SELECT * FROM fdw_db.dept
(3 rows)

-- Use wrong parameter name, error message will be displayed.
ALTER SERVER hdfs_server OPTIONS (log_remote_sql 'wrong');
EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM dept;
ERROR:  log_remote_sql requires a Boolean value
-- Use non-Boolean parameter name, error message will be displayed.
ALTER SERVER hdfs_server OPTIONS (SET log_remote_sql '1');
EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM dept;
ERROR:  log_remote_sql requires a Boolean value
-- Using empty set as parameter value, error message will be displayed.
ALTER SERVER hdfs_server OPTIONS (SET log_remote_sql '');
EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM dept;
ERROR:  log_remote_sql requires a Boolean value
-- 'false' is valid value, should pass
ALTER SERVER hdfs_server OPTIONS (SET log_remote_sql 'false');
EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM dept;
               QUERY PLAN                
-----------------------------------------
 Foreign Scan on public.dept
   Output: deptno, dname, loc
   Remote SQL: SELECT * FROM fdw_db.dept
(3 rows)

-- When set to 'true', logging will include SQL commands executed
-- on the remote server with the number of times that a scan is repeated
-- this need to check manually on database server log file, cannot be
-- automated, below query just check if 'true' is working as an option
-- Below is sample output of logfile how it looks for below query
/*
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
log4j:WARN No appenders could be found for logger (org.apache.hive.jdbc.Utils).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
2021-05-06 16:28:42 IST LOG:  hdfs_fdw: prepare remote SQL: [SELECT * FROM fdw_db.dept WHERE ((deptno > '20'))] [10000]
2021-05-06 16:28:42 IST STATEMENT:  SELECT * FROM dept where deptno > 20 ORDER BY deptno;
*/
ALTER SERVER hdfs_server OPTIONS (SET log_remote_sql 'true');
SELECT * FROM dept where deptno > 20 ORDER BY deptno;
 deptno |   dname    |   loc   
--------+------------+---------
     30 | SALES      | CHICAGO
     40 | OPERATIONS | BOSTON
(2 rows)

--Cleanup
DROP FOREIGN TABLE dept;
DROP USER MAPPING FOR public SERVER hdfs_server;
DROP SERVER hdfs_server;
DROP EXTENSION hdfs_fdw;
